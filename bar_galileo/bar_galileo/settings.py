"""
Django settings for bar_galileo project.

Generated by 'django-admin startproject' using Django 5.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""
from dotenv import load_dotenv
from pathlib import Path
import os
from django.core.management.utils import get_random_secret_key
# Build paths inside the project like this: BASE_DIR / 'subdir'.

load_dotenv(dotenv_path=Path(__file__).resolve().parent / '.env')
BASE_DIR = Path(__file__).resolve().parent.parent

STATIC_URL = '/static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# Configuración sensible a entorno
DEBUG = str(os.getenv('DEBUG', 'True')).lower() in ('1', 'true', 'yes')
SECRET_KEY = os.getenv('secret_key') or get_random_secret_key()
raw_hosts = os.getenv('ALLOWED_HOSTS', '*' if DEBUG else '')
ALLOWED_HOSTS = [h.strip() for h in raw_hosts.split(',') if h.strip()]


# Application definition

INSTALLED_APPS = [
    # app para el captcha
    'captcha',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    #apps propias
    'core', # se encarga las paginas de inicio
    'products',
    'accounts.apps.AccountsConfig',
    'tables',
    'roles',
    'users',
    'expenses',
    'nominas',
    #app para el dashboard
    'admin_dashboard',
    #app para facturación
    'facturacion',
    #apps necesarias para la libreria django-allauth
    'django.contrib.sites',                # ¡MUY IMPORTANTE!
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    #app para el manejo de las notificaciones
    'channels',
    'notifications',
    #app para el manejo de backups
    'dbbackup',
    'backups',
    ]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'roles.middleware.PermissionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'accounts.middleware.AdminRedirectMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'allauth.account.middleware.AccountMiddleware'
]

ROOT_URLCONF = 'bar_galileo.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'),
                os.path.join(BASE_DIR, 'accounts', 'templates'),
                os.path.join(BASE_DIR, 'products', 'templates'),
                os.path.join(BASE_DIR, 'core', 'templates'),
                os.path.join(BASE_DIR, 'admin_dashboard', 'templates'),
                os.path.join(BASE_DIR, 'notifications', 'templates'),
                os.path.join(BASE_DIR, 'backups', 'templates')
                ],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]


WSGI_APPLICATION = 'bar_galileo.wsgi.application'
ASGI_APPLICATION = 'bar_galileo.asgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'es-co'
USE_I18N = True
TIME_ZONE = 'UTC'

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Configuración de storages para Django 5.2+
STORAGES = {
    "default": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
    },
    "staticfiles": {
        "BACKEND": "django.contrib.staticfiles.storage.StaticFilesStorage",
    },
    "dbbackup": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
        "OPTIONS": {
            "location": str(BASE_DIR / "backups" / "backup_files" / "db"),
        },
    },
    "mediabackup": {
        "BACKEND": "django.core.files.storage.FileSystemStorage",
        "OPTIONS": {
            "location": str(BASE_DIR / "backups" / "backup_files" / "media"),
        },
    },
}

#lineas de codigo necesarias para que funcione django-allauth


SITE_ID = 1

SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': [
            'profile',
            'email',
        ],
        'AUTH_PARAMS': {
            'access_type': 'online',
        },
        'OAUTH_PKCE_ENABLED': True,
    }
}

ACCOUNT_FORMS = {
    'login': 'accounts.forms.CustomLoginForm',
    'add_email': 'accounts.forms.CustomAddEmailForm',
}

LOGIN_URL = '/accounts/login/'  # link que redirige al login
LOGIN_REDIRECT_URL = '/'

#---------------------- credenciales para enviar correos

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('emailHost')
EMAIL_HOST_PASSWORD = os.getenv('emailPassword')

# Endpoints de seguridad para producción
if not DEBUG:
    SECURE_SSL_REDIRECT = True
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_HSTS_SECONDS = 31536000  # 1 año
    SECURE_HSTS_INCLUDE_SUBDOMAINS = True
    SECURE_HSTS_PRELOAD = True
    SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

#bar-galileo

# ALLOWED_HOSTS se lee desde entorno arriba


# configuracion para el backend de las nofifaciones channels
# Mantener solo la configuración correcta de WSGI/ASGI definida arriba


CHANNEL_LAYERS = {
    "default": {
        "BACKEND": "channels.layers.InMemoryChannelLayer",  # Solo para desarrollo
    },
}

# Captcha settings
CAPTCHA_LENGTH = 1
CAPTCHA_IMAGE_SIZE = (225, 75)
CAPTCHA_FONT_SIZE = 40
CAPTCHA_FLITE_PATH = '/usr/bin/flite'

# ==================== Configuración de Django-DBBackup ====================
# Usar el storage "dbbackup" definido en STORAGES para base de datos
DBBACKUP_STORAGE = 'dbbackup'

# Usar el storage "mediabackup" definido en STORAGES para archivos media
DBBACKUP_MEDIA_STORAGE = 'mediabackup'

# Ruta de los archivos media a respaldar
DBBACKUP_MEDIA_PATH = MEDIA_ROOT

# Formato de nombres de archivos de backup (formato: 2025-10-19-123456.psql.gpg)
DBBACKUP_FILENAME_TEMPLATE = '{datetime}.psql'
DBBACKUP_MEDIA_FILENAME_TEMPLATE = '{datetime}.media.zip'# Limpieza automática - mantener solo los últimos 10 backups
DBBACKUP_CLEANUP_KEEP = 10
DBBACKUP_CLEANUP_KEEP_MEDIA = 10

# Compresión de backups
DBBACKUP_COMPRESS = True
DBBACKUP_COMPRESSION_LEVEL = 6  # 1-9, donde 9 es la máxima compresión

# Encriptación de backups con GNU Privacy Guard (GPG)
# IMPORTANTE: Los backups SIEMPRE están encriptados para mayor seguridad
DBBACKUP_ENCRYPTION = True
DBBACKUP_GPG_RECIPIENT = 'bargalileo07@gmail.com'

